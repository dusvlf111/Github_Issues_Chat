name: 🚀 Build and Deploy to GitHub Pages

on:
  # main 브랜치에 push될 때 실행
  push:
    branches: [ main, master ]
  
  # 수동으로도 실행 가능
  workflow_dispatch:

# GitHub Pages 배포를 위한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 배포 방지 (큐에 있는 실행은 취소)
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 빌드 작업
  build:
    name: 🔨 Build
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Type check
        run: npm run type-check
        
      - name: 🧹 Lint code
        run: npm run lint
        
      - name: 🏗️ Build project
        run: npm run build
        env:
          # 환경변수 설정 (필요시 GitHub Secrets에서 가져올 수 있음)
          VITE_GITHUB_ISSUE_NUMBER: ${{ vars.GITHUB_ISSUE_NUMBER || '1' }}
          VITE_GITHUB_REPO_OWNER: ${{ github.repository_owner }}
          VITE_GITHUB_REPO_NAME: ${{ github.event.repository.name }}
          VITE_GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          
      - name: 📋 Setup Pages
        uses: actions/configure-pages@v4
        
      - name: 📤 Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # 배포 작업
  deploy:
    name: 🌐 Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: 🎉 Deployment Success
        run: |
          echo "✅ 배포가 성공적으로 완료되었습니다!"
          echo "🌐 사이트 URL: ${{ steps.deployment.outputs.page_url }}"